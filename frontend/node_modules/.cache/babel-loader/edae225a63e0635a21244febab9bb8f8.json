{"ast":null,"code":"var _jsxFileName = \"/Users/cassiano/Documents/Estudos e leituras/Programac\\u0327a\\u0303o/IGTI/mod03/__grades-simulator/frontend/src/App.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport * as api from './api/apiService';\nimport Spinner from './components/Spinner';\nimport GradesControl from './components/GradesControl';\nimport ModalGrade from './components/ModalGrade';\nexport default function App() {\n  const [allGrades, setAllGrades] = useState([]);\n  const [selectedGrade, setSelectedGrade] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  useEffect(() => {\n    const fetchGrades = async () => {\n      const res = await api.getAllGrades();\n      setTimeout(() => {\n        setAllGrades(res);\n      }, 2000);\n    };\n\n    fetchGrades();\n  }, []);\n\n  const handleDelete = async grade => {\n    const isDeleted = await api.deleteGrade(grade);\n\n    if (isDeleted) {\n      const deletedGradeIndex = allGrades.findIndex(g => g.id === grade.id);\n      const newGrades = Object.assign([], allGrades);\n      newGrades[deletedGradeIndex].isDeleted = true;\n      newGrades[deletedGradeIndex].value = 0;\n      setAllGrades(newGrades);\n    }\n  };\n\n  const handlePersist = async grade => {\n    setSelectedGrade(grade);\n    setIsModalOpen(true);\n  };\n\n  const handlePersistData = async formData => {\n    setIsModalOpen(false);\n    const {\n      id,\n      newValue\n    } = formData;\n    const newGrades = Object.assign([], allGrades);\n    const gradeToPersist = newGrades.find(grade => grade.id === id);\n    gradeToPersist.value = newValue;\n\n    if (gradeToPersist.isDeleted) {\n      gradeToPersist.isDeleted = false;\n      await api.insertGrade(gradeToPersist);\n      return;\n    }\n\n    await api.updateGrade(gradeToPersist);\n  };\n\n  const handleClose = grade => {\n    setIsModalOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Desafio 04\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, allGrades.length === 0 && /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 36\n    }\n  }), allGrades.length > 0 && /*#__PURE__*/React.createElement(GradesControl, {\n    grades: allGrades,\n    onDelete: handleDelete,\n    onPersist: handlePersist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), isModalOpen && /*#__PURE__*/React.createElement(ModalGrade, {\n    onSave: handlePersistData,\n    onClose: handleClose,\n    selectedGrade: selectedGrade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/cassiano/Documents/Estudos e leituras/Programação/IGTI/mod03/__grades-simulator/frontend/src/App.js"],"names":["React","Fragment","useState","useEffect","api","Spinner","GradesControl","ModalGrade","App","allGrades","setAllGrades","selectedGrade","setSelectedGrade","isModalOpen","setIsModalOpen","fetchGrades","res","getAllGrades","setTimeout","handleDelete","grade","isDeleted","deleteGrade","deletedGradeIndex","findIndex","g","id","newGrades","Object","assign","value","handlePersist","handlePersistData","formData","newValue","gradeToPersist","find","insertGrade","updateGrade","handleClose","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAO,KAAKC,GAAZ,MAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,KAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,WAAW,GAAG,YAAY;AAC9B,YAAMC,GAAG,GAAG,MAAMZ,GAAG,CAACa,YAAJ,EAAlB;AACAC,MAAAA,UAAU,CAAC,MAAM;AACfR,QAAAA,YAAY,CAACM,GAAD,CAAZ;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KALD;;AAMAD,IAAAA,WAAW;AAEZ,GATQ,EASN,EATM,CAAT;;AAWA,QAAMI,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpC,UAAMC,SAAS,GAAG,MAAMjB,GAAG,CAACkB,WAAJ,CAAgBF,KAAhB,CAAxB;;AACA,QAAIC,SAAJ,EAAe;AACb,YAAME,iBAAiB,GACrBd,SAAS,CAACe,SAAV,CAAoBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASN,KAAK,CAACM,EAAxC,CADF;AAEA,YAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBpB,SAAlB,CAAlB;AACAkB,MAAAA,SAAS,CAACJ,iBAAD,CAAT,CAA6BF,SAA7B,GAAyC,IAAzC;AACAM,MAAAA,SAAS,CAACJ,iBAAD,CAAT,CAA6BO,KAA7B,GAAqC,CAArC;AACApB,MAAAA,YAAY,CAACiB,SAAD,CAAZ;AACD;AAEF,GAXD;;AAaA,QAAMI,aAAa,GAAG,MAAOX,KAAP,IAAiB;AACrCR,IAAAA,gBAAgB,CAACQ,KAAD,CAAhB;AACAN,IAAAA,cAAc,CAAC,IAAD,CAAd;AAED,GAJD;;AAMA,QAAMkB,iBAAiB,GAAG,MAAOC,QAAP,IAAoB;AAC5CnB,IAAAA,cAAc,CAAC,KAAD,CAAd;AACA,UAAM;AAACY,MAAAA,EAAD;AAAKQ,MAAAA;AAAL,QAAiBD,QAAvB;AACA,UAAMN,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBpB,SAAlB,CAAlB;AACA,UAAM0B,cAAc,GAAGR,SAAS,CAACS,IAAV,CAAehB,KAAK,IAAIA,KAAK,CAACM,EAAN,KAAaA,EAArC,CAAvB;AACAS,IAAAA,cAAc,CAACL,KAAf,GAAsBI,QAAtB;;AACA,QAAIC,cAAc,CAACd,SAAnB,EAA8B;AAC5Bc,MAAAA,cAAc,CAACd,SAAf,GAA2B,KAA3B;AACA,YAAMjB,GAAG,CAACiC,WAAJ,CAAgBF,cAAhB,CAAN;AACA;AACD;;AACD,UAAM/B,GAAG,CAACkC,WAAJ,CAAgBH,cAAhB,CAAN;AACD,GAZD;;AAaA,QAAMI,WAAW,GAAInB,KAAD,IAAW;AAC7BN,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,SAAS,CAAC+B,MAAV,KAAqB,CAArB,iBAA0B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD7B,EAEG/B,SAAS,CAAC+B,MAAV,GAAmB,CAAnB,iBACC,oBAAC,aAAD;AACE,IAAA,MAAM,EAAE/B,SADV;AAEE,IAAA,QAAQ,EAAEU,YAFZ;AAGE,IAAA,SAAS,EAAEY,aAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAFF,EAWGlB,WAAW,iBACV,oBAAC,UAAD;AACE,IAAA,MAAM,EAAEmB,iBADV;AAEE,IAAA,OAAO,EAAEO,WAFX;AAGE,IAAA,aAAa,EAAE5B,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADF;AAqBD","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport * as api from './api/apiService'\nimport Spinner from './components/Spinner';\nimport GradesControl from './components/GradesControl';\nimport ModalGrade from './components/ModalGrade';\n\nexport default function App() {\n  const [allGrades, setAllGrades] = useState([]);\n  const [selectedGrade, setSelectedGrade] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    const fetchGrades = async () => {\n      const res = await api.getAllGrades();\n      setTimeout(() => {\n        setAllGrades(res)\n      }, 2000)\n    }\n    fetchGrades();\n\n  }, [])\n\n  const handleDelete = async (grade) => {\n    const isDeleted = await api.deleteGrade(grade);\n    if (isDeleted) {\n      const deletedGradeIndex =\n        allGrades.findIndex(g => g.id === grade.id);\n      const newGrades = Object.assign([], allGrades);\n      newGrades[deletedGradeIndex].isDeleted = true;\n      newGrades[deletedGradeIndex].value = 0;\n      setAllGrades(newGrades);\n    }\n\n  }\n\n  const handlePersist = async (grade) => {\n    setSelectedGrade(grade);\n    setIsModalOpen(true);\n\n  }\n\n  const handlePersistData = async (formData) => {\n    setIsModalOpen(false);\n    const {id, newValue} = formData;\n    const newGrades = Object.assign([], allGrades);\n    const gradeToPersist = newGrades.find(grade => grade.id === id);\n    gradeToPersist.value= newValue\n    if (gradeToPersist.isDeleted) {\n      gradeToPersist.isDeleted = false;\n      await api.insertGrade(gradeToPersist);\n      return;\n    }\n    await api.updateGrade(gradeToPersist);\n  }\n  const handleClose = (grade) => {\n    setIsModalOpen(false);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"center\">Desafio 04</h1>\n      <div>\n        {allGrades.length === 0 && <Spinner />}\n        {allGrades.length > 0 &&\n          <GradesControl\n            grades={allGrades}\n            onDelete={handleDelete}\n            onPersist={handlePersist} />\n        }\n      </div>\n      {isModalOpen && (\n        <ModalGrade\n          onSave={handlePersistData}\n          onClose={handleClose}\n          selectedGrade={selectedGrade}\n        />\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}