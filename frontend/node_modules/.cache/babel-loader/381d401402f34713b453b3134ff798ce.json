{"ast":null,"code":"var _jsxFileName = \"/Users/cassiano/Documents/Estudos e leituras/Programac\\u0327a\\u0303o/IGTI/mod03/desafio-04/frontend/src/components/ModalGrade.js\";\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport * as api from './../api/apiService';\nimport css from './modal.module.css';\nModal.setAppElement('#root');\nexport default function ModalGrade({\n  onSave,\n  onClose,\n  selectedGrade\n}) {\n  const {\n    id,\n    student,\n    subject,\n    type,\n    value\n  } = selectedGrade;\n  const [gradeValue, setGradeValue] = useState(value);\n  const [gradeValidation, setGradeValidation] = useState({});\n  const [errorMsg, setErrorMsg] = useState('');\n  useEffect(() => {\n    const getValidation = async () => {\n      const validation = await api.getValidationFromGradeType(type);\n      setGradeValidation(validation);\n    };\n\n    getValidation();\n  }, [type]);\n  useEffect(() => {\n    const {\n      minValue,\n      maxValue\n    } = gradeValidation;\n\n    if (gradeValue < minValue || gradeValue > maxValue) {\n      setErrorMsg(`O valor da nota deve ser entre ${minValue} e ${maxValue} (inclusive)`);\n      return;\n    }\n\n    ;\n    setErrorMsg('');\n  }, [gradeValidation, gradeValue]);\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      onClose(null);\n    }\n  };\n\n  const handleFormSubmit = () => {};\n\n  const handleGradeChange = event => {\n    setGradeValue(+event.target.value);\n  };\n\n  const handleClose = () => {\n    onClose(null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.titleBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: css.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Manuten\\xE7\\xE3o de notas\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"waves-effect waves-light btn red dark-4\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${css.geral} container`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"inputName\",\n    type: \"text\",\n    value: student,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"active\",\n    htmlFor: \"inputName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Nome do aluno:\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"inputSubject\",\n    type: \"text\",\n    value: subject,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"active\",\n    htmlFor: \"inputSubject\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Disciplina:\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"inputType\",\n    type: \"text\",\n    value: type,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"active\",\n    htmlFor: \"inputType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Tipo de avalia\\xE7\\xE3o:\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"inputGrade\",\n    type: \"number\",\n    min: gradeValidation.minValue,\n    max: gradeValidation.maxValue,\n    step: \"1\",\n    autoFocus: true,\n    value: gradeValue,\n    onChange: handleGradeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"active\",\n    htmlFor: \"inputGrade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Nota:\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.footerActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"waves-effect waves-light btn\",\n    disabled: errorMsg.trim() !== '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"Salvar\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: css.errMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, errorMsg)))));\n}","map":{"version":3,"sources":["/Users/cassiano/Documents/Estudos e leituras/Programação/IGTI/mod03/desafio-04/frontend/src/components/ModalGrade.js"],"names":["React","useState","useEffect","Modal","api","css","setAppElement","ModalGrade","onSave","onClose","selectedGrade","id","student","subject","type","value","gradeValue","setGradeValue","gradeValidation","setGradeValidation","errorMsg","setErrorMsg","getValidation","validation","getValidationFromGradeType","minValue","maxValue","document","addEventListener","handleKeyDown","removeEventListener","event","key","handleFormSubmit","handleGradeChange","target","handleClose","titleBar","title","geral","footerActions","trim","errMsg"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport * as api from './../api/apiService';\nimport css from './modal.module.css';\n\n\nModal.setAppElement('#root');\nexport default function ModalGrade({ onSave, onClose, selectedGrade }) {\n  const { id, student, subject, type, value } = selectedGrade;\n\n  const [gradeValue, setGradeValue] = useState(value);\n  const [gradeValidation, setGradeValidation] = useState({});\n  const [errorMsg, setErrorMsg] = useState('');\n\n  useEffect(() => {\n    const getValidation = async () => {\n      const validation = await api.getValidationFromGradeType(type);\n      setGradeValidation(validation);\n    }\n    getValidation();\n\n  }, [type]);\n\n  useEffect(() => {\n    const { minValue, maxValue } = gradeValidation;\n    if (gradeValue < minValue || gradeValue > maxValue) {\n      setErrorMsg(`O valor da nota deve ser entre ${minValue} e ${maxValue} (inclusive)`);\n      return;\n    };\n    setErrorMsg('');\n  }, [gradeValidation, gradeValue])\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Escape') {\n      onClose(null);\n    }\n  }\n\n  const handleFormSubmit = () => {\n\n  }\n\n  const handleGradeChange = (event) => {\n    setGradeValue(+event.target.value)\n  }\n\n  const handleClose = () => {\n    onClose(null);\n  }\n\n  return (\n    <div>\n      <Modal isOpen={true}>\n        <div className={css.titleBar}>\n          <span className={css.title}>Manutenção de notas</span>\n          <button className='waves-effect waves-light btn red dark-4' onClick={handleClose}>\n            X\n          </button>\n        </div>\n        <div className={`${css.geral} container`}>\n          <div>\n            <form onSubmit={handleFormSubmit}>\n              <div className='input-field'>\n                <input id=\"inputName\" type=\"text\" value={student} readOnly />\n                <label className=\"active\" htmlFor=\"inputName\">\n                  Nome do aluno:\n            </label>\n              </div>\n              <div className='input-field'>\n                <input id=\"inputSubject\" type=\"text\" value={subject} readOnly />\n                <label className=\"active\" htmlFor=\"inputSubject\">\n                  Disciplina:\n            </label>\n              </div>\n              <div className='input-field'>\n                <input id=\"inputType\" type=\"text\" value={type} readOnly />\n                <label className=\"active\" htmlFor=\"inputType\">\n                  Tipo de avaliação:\n            </label>\n              </div>\n\n              <div className=\"input-field\">\n                <input\n                  id=\"inputGrade\"\n                  type=\"number\"\n                  min={gradeValidation.minValue}\n                  max={gradeValidation.maxValue}\n                  step=\"1\"\n                  autoFocus\n                  value={gradeValue}\n                  onChange={handleGradeChange}\n                />\n                <label className=\"active\" htmlFor=\"inputGrade\">\n                  Nota:\n            </label>\n              </div>\n            </form>\n          </div>\n\n          <div className={css.footerActions}>\n            <div>\n              <button className='waves-effect waves-light btn'\n                disabled={errorMsg.trim() !== ''}>\n                Salvar\n              </button>\n            </div>\n            <span className={css.errMsg}>\n              {errorMsg}\n            </span>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}